import { LoadingButton } from '@mui/lab';
import { Alert, Box, Container, Link, TextField } from '@mui/material';
import type { NextPage } from 'next';
import Head from 'next/head';
import NextLink from 'next/link';
import { useContext } from 'react';
import { SubmitHandler, useForm } from 'react-hook-form';
import { AuthContext } from '../contexts/auth-context';
import { useCreateUser } from '../hooks/use-create-user';
import { UserRoleEnum } from '../models/user-model';

type IFormInputs = {
  name: string;
  email: string;
  password: string;
};

const SignUp: NextPage = () => {
  const { register, handleSubmit } = useForm<IFormInputs>();
  const { mutateAsync, error, isLoading } = useCreateUser();

  const { signIn } = useContext(AuthContext);

  const onSubmit: SubmitHandler<IFormInputs> = async user => {
    try {
      const response = await mutateAsync({ ...user, role: UserRoleEnum.user });
      await signIn(user.email, user.password);
    } catch (err) {}
  };

  return (
    <Container
      maxWidth="md"
      style={{
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        height: '100vh',
      }}
    >
      <Head>
        <title>Bike Rentals - Sign up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="initial-scale=1, width=device-width" />
      </Head>

      <section>
        <h1>Create your account free</h1>
        <Box
          component="form"
          onSubmit={handleSubmit(onSubmit)}
          style={{ width: '50ch' }}
          sx={{
            '& .MuiTextField-root': { m: 1 },
            '& .MuiPaper-root': { m: 1, width: '100%' },
          }}
          noValidate
          autoComplete="off"
        >
          {error && (
            <Alert severity="error" color="error">
              {error?.message}
            </Alert>
          )}

          <Box style={{ flexDirection: 'column', display: 'flex' }}>
            <TextField
              {...register('name', { required: true })}
              required
              id="name"
              type="text"
              label="Name"
              fullWidth
            />
            <TextField
              {...register('email', { required: true })}
              required
              id="email"
              type="email"
              label="Email"
              fullWidth
            />
            <TextField
              {...register('password', { required: true })}
              required
              type="password"
              id="password"
              label="Password"
              fullWidth
            />
          </Box>
          <Box style={{ margin: '8px' }}>
            <LoadingButton
              sx={{
                marginBottom: 1,
                '.MuiLoadingButton-startIconLoadingStart': {
                  marginRight: 1,
                },
              }}
              loading={isLoading}
              variant="outlined"
              type="submit"
              loadingIndicator="Saving"
            >
              Create account
            </LoadingButton>
            <br />
            <NextLink href="/sign-in">
              <Link color="inherit" href="#!">
                Already have an account ?
              </Link>
            </NextLink>
          </Box>
        </Box>
      </section>
    </Container>
  );
};

export default SignUp;
